buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "ProfMobius"
            url = "http://mobiusstrip.eu/maven"
        }
        maven {
            name = "ChickenBones"
            url = "http://chickenbones.net/maven/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}
apply plugin: 'scala'
apply plugin: 'forge'
group = "com.awesomesauce.minecraft.forge.core" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AwesomeSauceCore"
buildtarget = "1.7.x"
if (System.getenv("TRAVIS") == "true") {
    version = buildtarget + "-" + System.getenv("TRAVIS_BRANCH") + "-b" + System.getenv("TRAVIS_BUILD_NUMBER")
} else if (System.getenv("BUILD_ID") == null) {
    version = buildtarget + "-bmanual"
}
else {
    version = "1.7.x-b" + System.getenv("BUILD_ID")
}

subprojects {
    apply plugin: 'scala'
    apply plugin: 'forge'

    group = "com.awesomesauce.minecraft.forge." + name.toLowerCase()
    archivesBaseName = name
    if (System.getenv("BUILD_ID") == null) {
        version = "1.7.x-bmanual"
    }
    else {
        version = "1.7.x-b" + System.getenv("BUILD_ID")
    }


    dependencies {
        if (project.name != "ASSScript" && project.name != "AwesomeSauceLib") {
            compile rootProject
        }
    }

    rootProject.reobf {
        reobf(jar) { spec ->
            spec.classpath = sourceSets.main.compileClasspath
        }
    }

    jar {
        destinationDir = new File(rootProject.getBuildDir(), 'libs')
    }
}
allprojects {

    minecraft {
        version = "1.7.10-10.13.2.1230"
    }
    processResources
            {
                // replace stuff in mcmod.info, nothing else
                from(sourceSets.main.resources.srcDirs) {
                    include 'mcmod.info'

                    // replace version and mcversion
                    expand 'version': project.version, 'mcversion': rootProject.minecraft.version
                }

                // copy everything else, thats not the mcmod.info
                from(sourceSets.main.resources.srcDirs) {
                    exclude 'mcmod.info'
                }
            }
}
